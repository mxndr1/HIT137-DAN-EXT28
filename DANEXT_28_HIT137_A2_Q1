"""
Group Name: DAN/EXT 28

Group Members:
Fateen Rahman – S387983
Hendrick Dang – S395598
Kevin Zhu – S387035
Mehraab Ferdouse – S393148
"""


def enc(ch, s1, s2):
    if ch.islower():
        
        if ch < 'n':      
            shift = s1 * s2
            return chr((ord(ch) - 97 + shift) % 26 + 97)
        else:            
            shift = s1 + s2
            return chr((ord(ch) - 97 - shift) % 26 + 97)

    elif ch.isupper():
      
        if ch < 'N':     
            shift = s1
            return chr((ord(ch) - 65 - shift) % 26 + 65)
        else:            
            shift = s2 * s2
            return chr((ord(ch) - 65 + shift) % 26 + 65)
    else:
        
        return ch

def dec(ch, s1, s2):
    if ch.islower():
        if ch < 'n':
            shift = s1 * s2
            return chr((ord(ch) - 97 - shift) % 26 + 97)
        else:
            shift = s1 + s2
            return chr((ord(ch) - 97 + shift) % 26 + 97)

    elif ch.isupper():
        if ch < 'N':
            shift = s1
            return chr((ord(ch) - 65 + shift) % 26 + 65)
        else:
            shift = s2 * s2
            return chr((ord(ch) - 65 - shift) % 26 + 65)
    else:
        return ch

def encrypt_file(s1, s2):
    with open("raw_text.txt","r") as f:
        plain = f.read()
    encrypted = ""
    for c in plain:
      encrypted += enc(c, s1, s2)
    with open("encrypted_text.txt","w") as f:
        f.write(encrypted)

def decrypt_file(s1, s2):
    with open("encrypted_text.txt","r") as f:
        encrypted = f.read()
    decrypted = ""
    for c in encrypted:
      decrypted += dec(c, s1, s2)
    with open("decrypted_text.txt","w") as f:
        f.write(decrypted)

def verify():
    with open("raw_text.txt") as f1, open("decrypted_text.txt") as f2:
        if f1.read() == f2.read():
            print("Decryption successful!")
        else:
            print("Decryption failed.")
def main():
    s1 = int(input("Enter shift1: "))
    s2 = int(input("Enter shift2: "))
    encrypt_file(s1, s2)
    decrypt_file(s1, s2)
    verify()

if __name__ == "__main__":
    main()

